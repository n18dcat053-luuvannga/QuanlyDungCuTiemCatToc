/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package NhanVienTCT;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class addUser extends javax.swing.JFrame {

    Vector nv = new Vector();
    Vector datanv = new Vector();

    String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    String url = "jdbc:sqlserver://localhost:1433; databaseName=QL_DCMPTCT";
    String user = "sa";
    String password = "123";
    Statement st;
    ResultSet rs;

    @SuppressWarnings("unchecked")

    public addUser() {
        initComponents();
        this.setLocationRelativeTo(null);
        nv.add("Mã NV");
        nv.add("Họ");
        nv.add("Tên");
        nv.add("Giới Tính");
        nv.add("Địa chỉ");
        nv.add("Username");
        nv.add("Password");
        nv.add("Mã PQ");
        txtpq.setText("PQ2");
        txtpq.setEditable(false);

        tableqlnv.setModel(new DefaultTableModel(datanv, nv));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        insert = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableqlnv = new javax.swing.JTable();
        jlableIDNV = new javax.swing.JLabel();
        jLabelHo = new javax.swing.JLabel();
        jLabelTen = new javax.swing.JLabel();
        jLabelGioiTinh = new javax.swing.JLabel();
        jLabelDiaChi = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        txtho = new javax.swing.JTextField();
        txtten = new javax.swing.JTextField();
        txtgioitinh = new javax.swing.JTextField();
        txtdc = new javax.swing.JTextField();
        JlableUser = new javax.swing.JLabel();
        jLabelPass = new javax.swing.JLabel();
        jLabelMaPQ = new javax.swing.JLabel();
        txtuser = new javax.swing.JTextField();
        txtpass = new javax.swing.JTextField();
        txtpq = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Thêm Nhân Viên");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        insert.setBackground(new java.awt.Color(51, 255, 51));
        insert.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        insert.setForeground(new java.awt.Color(255, 255, 255));
        insert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/anh/add-user-302 (1).png"))); // NOI18N
        insert.setText("Insert");
        insert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insertMouseClicked(evt);
            }
        });
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });
        getContentPane().add(insert, new org.netbeans.lib.awtextra.AbsoluteConstraints(882, 468, 130, -1));

        tableqlnv.setBackground(new java.awt.Color(102, 102, 102));
        tableqlnv.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        tableqlnv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã NV", "Họ", "Tên", "Giới tính", "Địa chỉ", "Username", "Password", "Mã PQ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableqlnv.setRowHeight(30);
        tableqlnv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableqlnvKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tableqlnv);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 547));

        jlableIDNV.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jlableIDNV.setForeground(new java.awt.Color(102, 102, 102));
        jlableIDNV.setText("Mã NV");
        getContentPane().add(jlableIDNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 25, -1, -1));

        jLabelHo.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabelHo.setForeground(new java.awt.Color(102, 102, 102));
        jLabelHo.setText("Họ");
        getContentPane().add(jLabelHo, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 78, -1, -1));

        jLabelTen.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabelTen.setForeground(new java.awt.Color(102, 102, 102));
        jLabelTen.setText("Tên");
        getContentPane().add(jLabelTen, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 136, -1, -1));

        jLabelGioiTinh.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabelGioiTinh.setForeground(new java.awt.Color(102, 102, 102));
        jLabelGioiTinh.setText("Giới tính");
        getContentPane().add(jLabelGioiTinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 194, -1, -1));

        jLabelDiaChi.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabelDiaChi.setForeground(new java.awt.Color(102, 102, 102));
        jLabelDiaChi.setText("Địa Chỉ");
        getContentPane().add(jLabelDiaChi, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 251, -1, -1));

        txtid.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtidFocusLost(evt);
            }
        });
        txtid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidActionPerformed(evt);
            }
        });
        getContentPane().add(txtid, new org.netbeans.lib.awtextra.AbsoluteConstraints(826, 22, 246, -1));

        txtho.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtho.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txthoFocusLost(evt);
            }
        });
        getContentPane().add(txtho, new org.netbeans.lib.awtextra.AbsoluteConstraints(826, 75, 246, -1));

        txtten.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtten.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txttenFocusLost(evt);
            }
        });
        getContentPane().add(txtten, new org.netbeans.lib.awtextra.AbsoluteConstraints(826, 133, 246, -1));

        txtgioitinh.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtgioitinh.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtgioitinhFocusLost(evt);
            }
        });
        getContentPane().add(txtgioitinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(826, 191, 246, -1));

        txtdc.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        getContentPane().add(txtdc, new org.netbeans.lib.awtextra.AbsoluteConstraints(826, 248, 246, -1));

        JlableUser.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        JlableUser.setForeground(new java.awt.Color(102, 102, 102));
        JlableUser.setText("Username");
        getContentPane().add(JlableUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 309, -1, -1));

        jLabelPass.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabelPass.setForeground(new java.awt.Color(102, 102, 102));
        jLabelPass.setText("Password");
        getContentPane().add(jLabelPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 366, -1, -1));

        jLabelMaPQ.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabelMaPQ.setForeground(new java.awt.Color(102, 102, 102));
        jLabelMaPQ.setText("Mã PQ");
        getContentPane().add(jLabelMaPQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 419, -1, -1));

        txtuser.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtuser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtuserFocusLost(evt);
            }
        });
        getContentPane().add(txtuser, new org.netbeans.lib.awtextra.AbsoluteConstraints(825, 306, 246, -1));

        txtpass.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtpass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtpassFocusLost(evt);
            }
        });
        getContentPane().add(txtpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(825, 363, 246, -1));

        txtpq.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtpq.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtpqFocusLost(evt);
            }
        });
        getContentPane().add(txtpq, new org.netbeans.lib.awtextra.AbsoluteConstraints(825, 416, 246, -1));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(994, 518, 92, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/anh/addUser_background.jpg"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 0, 1100, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents
   // them
    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed

        String idtam = txtid.getText();
        String tamid;
        try {
            Class.forName(driver);
            Connection conid = DriverManager.getConnection(url, user, password);
            String sqlus = "SELECT idnv FROM nhanvien";
            Statement stid = conid.createStatement();
            ResultSet rsid = stid.executeQuery(sqlus);

            while (rsid.next()) {
                tamid = rsid.getString("idnv");
                if (tamid.equals(idtam)) {
                    JOptionPane.showMessageDialog(this, "MANV đã tồn tại xin nhập lại");
                    return;
                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        if (txtid.getText().equals("") || txtho.getText().equals("") || txtten.getText().equals("") || txtgioitinh.getText().equals("")
                || txtuser.getText().equals("") || txtpass.getText().equals("") || txtpq.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Không để thông tin trống");
            return;
        }
        int dk = JOptionPane.showConfirmDialog(this, "Bạn có muốn đăng ký không", "Confirm", JOptionPane.YES_NO_OPTION);
        if (dk != JOptionPane.YES_NO_OPTION) {
            return;
        }
        String usertam = txtuser.getText();
        String tam;
        try {
            Class.forName(driver);
            Connection con1 = DriverManager.getConnection(url, user, password);
            String sqlus = "SELECT username FROM userCH";
            Statement stus = con1.createStatement();
            ResultSet rsus = stus.executeQuery(sqlus);

            while (rsus.next()) {
                tam = rsus.getString("username");
                if (tam.equals(usertam)) {
                    JOptionPane.showMessageDialog(this, "Username đã tồn tại xin nhập lại");
                    return;
                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        try {
            Class.forName(driver);
            Connection con = DriverManager.getConnection(url, user, password);
            String sql = "insert into nhanvien values(?,?,?,?,?)";
            PreparedStatement ps = con.prepareStatement(sql);

            ps.setString(1, txtid.getText());
            ps.setString(2, txtho.getText().trim());
            ps.setString(3, txtten.getText().trim());
            ps.setString(4, txtgioitinh.getText().trim());
            ps.setString(5, txtdc.getText().trim());

            int n = ps.executeUpdate();
//            if(txtid.getText().equals("") || txtho.getText().equals("") || txtten.getText().equals("") || txtgioitinh.getText().equals("")){
//                JOptionPane.showMessageDialog(this,"Không để thông tin trống");
//            }   
//            else if(n!=0){
//                JOptionPane.showMessageDialog(this,"Đăng kí thành công");
//            }else{
//                JOptionPane.showMessageDialog(this,"Đăng kí thất bại");
//            }                                             
        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            Class.forName(driver);
            Connection con1 = DriverManager.getConnection(url, user, password);
            String sql1 = "insert into userCH values(?,?,?,?)";
            PreparedStatement ps1 = con1.prepareStatement(sql1);
            ps1.setString(1, txtuser.getText().trim());
            ps1.setString(2, txtpass.getText().trim());
            ps1.setString(3, txtpq.getText().trim());
            ps1.setString(4, txtid.getText());

            int n1 = ps1.executeUpdate();
            if (txtuser.getText().equals("") || txtpass.getText().equals("") || txtpq.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Không để thông tin trống");
            } else if (n1 != 0) {
                JOptionPane.showMessageDialog(this, "Đăng kí thành công");
            } else {
                JOptionPane.showMessageDialog(this, "Đăng kí thất bại");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        String msv = txtid.getText();
        String hsv = txtho.getText();
        String tensv = txtten.getText();
        String gioitinh = txtgioitinh.getText();
        String diachi = txtdc.getText();
        String username = txtuser.getText();
        String password = txtpass.getText();
        String mpq = txtpq.getText();

        Vector add = new Vector(); // tao lop de them du lieu
        add.add(msv);
        add.add(hsv);
        add.add(tensv);
        add.add(gioitinh);
        add.add(diachi);
        add.add(username);
        add.add(password);
        add.add(mpq);
        datanv.add(add); // luu du lieu vao add
        tableqlnv.setModel(new DefaultTableModel(datanv, nv));
    }//GEN-LAST:event_insertActionPerformed

    private void insertMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertMouseClicked
        desplaydetails(((JTable) evt.getSource()).getSelectedRow());
    }//GEN-LAST:event_insertMouseClicked

    private void tableqlnvKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableqlnvKeyReleased
        desplaydetails(((JTable) evt.getSource()).getSelectedRow());
    }//GEN-LAST:event_tableqlnvKeyReleased

    private void txtidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

// bat kieu dien k de trong thong tin
    private void txthoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txthoFocusLost
//        String ho=txtho.getText();
//        if(ho.length()>0){
//            
//        }else{
//            JOptionPane.showMessageDialog(rootPane,"Không để họ trống!");
//        }
    }//GEN-LAST:event_txthoFocusLost

    private void txttenFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txttenFocusLost
//         String ten=txtten.getText();
//        if(ten.length()>0){
//             
//        }
//        else{
//            JOptionPane.showMessageDialog(rootPane,"Không để tên trống!");
//        }

    }//GEN-LAST:event_txttenFocusLost

    private void txtgioitinhFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtgioitinhFocusLost
//        String gioitinh=txtgioitinh.getText();
//        if(gioitinh.length()>0){
//            
//        }else{
//            JOptionPane.showMessageDialog(rootPane,"Không để giới tính trống!");
//        }

    }//GEN-LAST:event_txtgioitinhFocusLost

    private void txtuserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtuserFocusLost
//       String username=txtuser.getText();
//        if(username.length()>0){
//            
//        }else{
//            JOptionPane.showMessageDialog(rootPane,"Không để username trống!");
//        }
    }//GEN-LAST:event_txtuserFocusLost

    private void txtpassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpassFocusLost
//        String pass=txtpass.getText();
//        if(pass.length()>0){
//            
//        }else{
//            JOptionPane.showMessageDialog(rootPane,"Không để password trống!");
//        }
    }//GEN-LAST:event_txtpassFocusLost

    private void txtpqFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtpqFocusLost
//        String pq=txtpq.getText();
//        if(pq.length()>0){
//            
//        }else{
//            JOptionPane.showMessageDialog(rootPane,"Không để Mã Phân Quyền trống!");
//        }
    }//GEN-LAST:event_txtpqFocusLost

    private void txtidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtidFocusLost
        String id = txtid.getText();
        String reg = "^\\w{2}\\d{4}$";
        if (id.length() > 0) {
            if (!id.matches(reg)) // neu id sai dinh dang la 2 chu 4 so
            {
                JOptionPane.showMessageDialog(rootPane, "Sai định dạng Id, Nhập lại,NV0001->NV9999");
            }
//            txtid.requestFocus();

        } else {
            JOptionPane.showMessageDialog(rootPane, "Không để Mã nhân viên trống!");
//            txtid.requestFocus();
        }
    }//GEN-LAST:event_txtidFocusLost

    private void desplaydetails(int selectedRows) {

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JlableUser;
    private javax.swing.JLabel background;
    private javax.swing.JButton insert;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabelDiaChi;
    private javax.swing.JLabel jLabelGioiTinh;
    private javax.swing.JLabel jLabelHo;
    private javax.swing.JLabel jLabelMaPQ;
    private javax.swing.JLabel jLabelPass;
    private javax.swing.JLabel jLabelTen;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlableIDNV;
    private javax.swing.JTable tableqlnv;
    private javax.swing.JTextField txtdc;
    private javax.swing.JTextField txtgioitinh;
    private javax.swing.JTextField txtho;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtpass;
    private javax.swing.JTextField txtpq;
    private javax.swing.JTextField txtten;
    private javax.swing.JTextField txtuser;
    // End of variables declaration//GEN-END:variables
}
